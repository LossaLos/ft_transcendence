import os
from stable_baselines3 import PPO  # type: ignore
from stable_baselines3.common.vec_env import DummyVecEnv  # type: ignore

from env_pong3d import Pong3DEnv

SAVE_PATH = "./models/pong3d_agent"


def main():
    env = Pong3DEnv(frame_skip=60, max_steps=2000)
    env = DummyVecEnv([lambda: env])  # Vectorized env

    if os.path.exists(SAVE_PATH + ".zip"):
        print("ðŸ”„ Chargement du modÃ¨le existant...")
        model = PPO.load(SAVE_PATH, env)
    else:
        print("ðŸš€ CrÃ©ation d'un nouveau modÃ¨le...")
        model = PPO("MlpPolicy", env, verbose=1)

    TIMESTEPS = 100000
    for i in range(1, 21):
        model.learn(total_timesteps=TIMESTEPS, reset_num_timesteps=False)
        model.save(SAVE_PATH)
        print(f"ðŸ“‚ ModÃ¨le sauvegardÃ© aprÃ¨s {i * TIMESTEPS} steps")

    print("âœ… EntraÃ®nement terminÃ©, modÃ¨le final sauvegardÃ©.")


if __name__ == "__main__":
    main()
